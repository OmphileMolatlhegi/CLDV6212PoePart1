@model List<ABCRetail.Models.Order>

@{
    ViewData["Title"] = "Orders";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="fas fa-shopping-cart me-2"></i>Orders</h1>
    <a asp-action="Create" class="btn btn-primary">
        <i class="fas fa-plus me-2"></i>Create New Order
    </a>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (Model != null && Model.Any())
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Order ID</th>
                    <th>Customer</th>
                    <th>Product</th>
                    <th>Order Date</th>
                    <th>Quantity</th>
                    <th>Total Price</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model)
                {
                    <tr>
                        <td><strong>@order.OrderId</strong></td>
                        <td>@order.Username</td>
                        <td>@order.ProductName</td>
                        <td>@order.OrderDate.ToString("yyyy-MM-dd")</td>
                        <td>@order.Quantity</td>
                        <td>$@order.TotalPrice.ToString("N2")</td>
                        <td>
                            <span class="badge @GetStatusBadgeClass(order.Status)">
                                @order.Status
                            </span>
                        </td>
                        <td>
                            <div class="btn-group" role="group">
                                <a asp-action="Details" asp-route-id="@order.OrderId" class="btn btn-sm btn-info">
                                    <i class="fas fa-eye"></i> Details
                                </a>
                                <a asp-action="Edit" asp-route-id="@order.OrderId" class="btn btn-sm btn-warning">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                                <form asp-action="Delete" method="post" class="d-inline">
                                    <input type="hidden" name="id" value="@order.OrderId" />
                                    <button type="submit" class="btn btn-sm btn-danger"
                                            onclick="return confirm('Are you sure you want to delete order #@order.OrderId?')">
                                        <i class="fas fa-trash"></i> Delete
                                    </button>
                                </form>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="alert alert-info" role="alert">
        <h4 class="alert-heading"><i class="fas fa-info-circle me-2"></i>No orders found!</h4>
        <p>There are no orders in the system yet. Click the button above to create your first order.</p>
    </div>
}

@functions {
    private string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Pending" => "bg-secondary",
            "Processing" => "bg-warning",
            "Completed" => "bg-success",
            "Cancelled" => "bg-danger",
            _ => "bg-secondary"
        };
    }
}