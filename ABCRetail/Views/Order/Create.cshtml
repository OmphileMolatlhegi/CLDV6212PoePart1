@model ABCRetail.ViewModels.OrderCreateViewModel

@{
    ViewData["Title"] = "Create New Order";
}

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">@ViewData["Title"]</h3>
            </div>
            <div class="card-body">
                <form asp-action="Create" method="post" id="orderForm">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label asp-for="CustomerId" class="form-label">Customer</label>
                                <select asp-for="CustomerId" asp-items="Model.Customers" class="form-select" id="customerSelect">
                                    <option value="">-- Select Customer --</option>
                                </select>
                                <span asp-validation-for="CustomerId" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label asp-for="ProductId" class="form-label">Product</label>
                                <select asp-for="ProductId" asp-items="Model.Products" class="form-select" id="productSelect">
                                    <option value="">-- Select Product --</option>
                                </select>
                                <span asp-validation-for="ProductId" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group mb-3">
                                <label asp-for="Quantity" class="form-label">Quantity</label>
                                <input asp-for="Quantity" type="number" min="1" class="form-control" id="quantityInput" />
                                <span asp-validation-for="Quantity" class="text-danger"></span>
                                <small class="form-text text-muted" id="stockInfo">Available stock: 0</small>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group mb-3">
                                <label asp-for="OrderDate" class="form-label">Order Date</label>
                                <input asp-for="OrderDate" type="date" class="form-control" />
                                <span asp-validation-for="OrderDate" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group mb-3">
                                <label asp-for="Status" class="form-label">Status</label>
                                <select asp-for="Status" class="form-select">
                                    <option value="Pending">Pending</option>
                                    <option value="Processing">Processing</option>
                                    <option value="Completed">Completed</option>
                                    <option value="Cancelled">Cancelled</option>
                                </select>
                                <span asp-validation-for="Status" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <!-- Order Summary -->
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="card-title">Order Summary</h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <p><strong>Unit Price:</strong> <span id="unitPrice">$0.00</span></p>
                                    <p><strong>Quantity:</strong> <span id="summaryQuantity">0</span></p>
                                </div>
                                <div class="col-md-6">
                                    <p><strong>Total Price:</strong> <span id="totalPrice" class="h5 text-success">$0.00</span></p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <button type="submit" class="btn btn-primary" id="submitButton">
                            <i class="fas fa-save"></i> Create Order
                        </button>
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Back to List
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Order Summary Sidebar -->
    <div class="col-md-4">
        <div class="card">
            <div class="card-header bg-info text-white">
                <h5 class="card-title mb-0">Order Information</h5>
            </div>
            <div class="card-body">
                <div class="alert alert-info" role="alert">
                    <i class="fas fa-info-circle"></i>
                    <strong>Real-time Pricing</strong>
                    <p class="mb-0">Prices and stock levels update automatically when you select a product.</p>
                </div>

                <h6>Current Selection:</h6>
                <ul class="list-group mb-3">
                    <li class="list-group-item" id="selectedCustomer">No customer selected</li>
                    <li class="list-group-item" id="selectedProduct">No product selected</li>
                </ul>

                <h6>Stock Validation:</h6>
                <div class="alert alert-warning" id="stockWarning" style="display: none;">
                    <i class="fas fa-exclamation-triangle"></i>
                    <span id="warningMessage">Insufficient stock</span>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function() {
            var currentProductId = null;
            var currentPrice = 0;
            var currentStock = 0;

            // Update product information when product selection changes
            $('#productSelect').change(function() {
                var productId = $(this).val();
                if (productId) {
                    $.getJSON('@Url.Action("GetProductPrice", "Order")', { productId: productId }, function(data) {
                        if (data.success) {
                            currentProductId = productId;
                            currentPrice = data.price;
                            currentStock = data.stock;

                            // Update UI
                            $('#unitPrice').text('$' + data.price.toFixed(2));
                            $('#stockInfo').text('Available stock: ' + data.stock);
                            $('#selectedProduct').text($('#productSelect option:selected').text() + ' - $' + data.price.toFixed(2));

                            // Update quantity validation
                            var quantity = parseInt($('#quantityInput').val()) || 0;
                            validateQuantity(quantity, data.stock);

                            // Calculate total price
                            calculateTotalPrice(quantity, data.price);
                        }
                    });
                } else {
                    resetProductInfo();
                }
            });

            // Update when quantity changes
            $('#quantityInput').on('input', function() {
                var quantity = parseInt($(this).val()) || 0;
                calculateTotalPrice(quantity, currentPrice);
                validateQuantity(quantity, currentStock);
            });

            // Update customer selection display
            $('#customerSelect').change(function() {
                var customerName = $(this).find('option:selected').text();
                $('#selectedCustomer').text(customerName || 'No customer selected');
            });

            function calculateTotalPrice(quantity, price) {
                var total = quantity * price;
                $('#totalPrice').text('$' + total.toFixed(2));
                $('#summaryQuantity').text(quantity);
            }

            function validateQuantity(quantity, stock) {
                var $warning = $('#stockWarning');
                var $submitButton = $('#submitButton');

                if (quantity > stock) {
                    $warning.show();
                    $('#warningMessage').text('Insufficient stock! Only ' + stock + ' available.');
                    $submitButton.prop('disabled', true);
                } else if (quantity <= 0) {
                    $warning.show();
                    $('#warningMessage').text('Please enter a valid quantity (minimum 1).');
                    $submitButton.prop('disabled', true);
                } else {
                    $warning.hide();
                    $submitButton.prop('disabled', false);
                }
            }

            function resetProductInfo() {
                currentProductId = null;
                currentPrice = 0;
                currentStock = 0;

                $('#unitPrice').text('$0.00');
                $('#stockInfo').text('Available stock: 0');
                $('#totalPrice').text('$0.00');
                $('#summaryQuantity').text('0');
                $('#selectedProduct').text('No product selected');
                $('#stockWarning').hide();
                $('#submitButton').prop('disabled', false);
            }

            // Form submission validation
            $('#orderForm').on('submit', function() {
                var quantity = parseInt($('#quantityInput').val()) || 0;
                if (quantity > currentStock) {
                    toastr.error('Cannot create order: Quantity exceeds available stock.');
                    return false;
                }
                return true;
            });
        });
    </script>
}