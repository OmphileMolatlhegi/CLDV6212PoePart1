@model ABCRetail.Models.Product

@{
    ViewData["Title"] = "Edit Product";
}

<div class="row">
    <div class="col-md-8 mx-auto">
        <div class="card">
            <div class="card-header bg-warning text-white">
                <h3 class="card-title mb-0">
                    <i class="fas fa-edit me-2"></i>@ViewData["Title"]
                </h3>
                <p class="card-subtitle mb-0 mt-1">Editing: @Model.ProductName</p>
            </div>
            <div class="card-body">
                <!-- Success/Error Messages -->
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger">
                        <h5>Please fix the following errors:</h5>
                        <ul>
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <li>@error.ErrorMessage</li>
                            }
                        </ul>
                    </div>
                }

                <form asp-action="Edit" method="post" enctype="multipart/form-data">
                    <input type="hidden" asp-for="ProductId" />
                    <input type="hidden" asp-for="PartitionKey" />
                    <input type="hidden" asp-for="RowKey" />
                    <input type="hidden" asp-for="Timestamp" />
                    <input type="hidden" asp-for="ETag" />

                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label asp-for="ProductName" class="form-label">Product Name *</label>
                                <input asp-for="ProductName" class="form-control" />
                                <span asp-validation-for="ProductName" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label asp-for="Price" class="form-label">Price ($) *</label>
                                <input asp-for="Price" type="number" step="0.01" min="0" class="form-control" />
                                <span asp-validation-for="Price" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Description" class="form-label">Description</label>
                        <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label asp-for="StockAvailable" class="form-label">Stock Available *</label>
                                <input asp-for="StockAvailable" type="number" min="0" class="form-control" />
                                <span asp-validation-for="StockAvailable" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-4">
                                <label class="form-label">Current Image</label>
                                <div>
                                    @if (!string.IsNullOrEmpty(Model.ImageUrl))
                                    {
                                        <img src="@Model.ImageUrl" alt="@Model.ProductName"
                                             class="img-thumbnail mb-2" style="width: 100px; height: 100px; object-fit: cover;">
                                        <br>
                                        <small class="text-muted">Current product image</small>
                                        <input type="hidden" asp-for="ImageUrl" />
                                    }
                                    else
                                    {
                                        <div class="bg-light d-flex align-items-center justify-content-center"
                                             style="width: 100px; height: 100px;">
                                            <i class="fas fa-image text-muted"></i>
                                        </div>
                                        <small class="text-muted">No image uploaded</small>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group mb-4">
                        <label class="form-label">Update Image (Optional)</label>
                        <input type="file" name="imageFile" class="form-control" accept="image/*" id="imageFileInput" />
                        <small class="form-text text-muted">Upload a new image to replace the current one (JPG, PNG, GIF)</small>
                        <div class="text-danger" id="imageError"></div>
                    </div>

                    <!-- New Image Preview -->
                    <div class="form-group mb-4" id="imagePreviewContainer" style="display: none;">
                        <label class="form-label">New Image Preview</label>
                        <div class="border rounded p-3 text-center">
                            <img id="imagePreview" class="img-fluid rounded" style="max-height: 200px;" />
                            <p class="text-muted mt-2 small" id="fileName"></p>
                        </div>
                    </div>

                    <div class="form-group">
                        <button type="submit" class="btn btn-primary" id="submitButton">
                            <i class="fas fa-save me-2"></i>Update Product
                        </button>
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="fas fa-arrow-left me-2"></i>Back to List
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function() {
            // Image preview functionality
            $('#imageFileInput').change(function(e) {
                const file = e.target.files[0];
                const previewContainer = $('#imagePreviewContainer');
                const preview = $('#imagePreview');
                const fileName = $('#fileName');
                const imageError = $('#imageError');

                // Reset error message
                imageError.text('');

                if (file) {
                    // Validate file type
                    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif'];
                    if (!allowedTypes.includes(file.type)) {
                        imageError.text('Please select a valid image file (JPG, PNG, GIF)');
                        $(this).val('');
                        previewContainer.hide();
                        return;
                    }

                    // Validate file size (5MB max)
                    const maxSize = 5 * 1024 * 1024;
                    if (file.size > maxSize) {
                        imageError.text('File size must be less than 5MB');
                        $(this).val('');
                        previewContainer.hide();
                        return;
                    }

                    const reader = new FileReader();
                    reader.onload = function(e) {
                        preview.attr('src', e.target.result);
                        fileName.text('File: ' + file.name);
                        previewContainer.show();
                    }
                    reader.readAsDataURL(file);
                } else {
                    previewContainer.hide();
                }
            });

            // Auto-format price input
            $('#Price').on('blur', function() {
                const value = parseFloat($(this).val());
                if (!isNaN(value)) {
                    $(this).val(value.toFixed(2));
                }
            });

            // Stock validation
            $('#StockAvailable').on('input', function() {
                let stock = parseInt($(this).val()) || 0;
                if (stock < 0) {
                    $(this).val(0);
                }
            });

            // Show messages from TempData
            const successMessage = '@TempData["SuccessMessage"]';
            if (successMessage) {
                toastr.success(successMessage);
            }

            const errorMessage = '@TempData["ErrorMessage"]';
            if (errorMessage) {
                toastr.error(errorMessage);
            }
        });
    </script>
}